/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityResourceGroupsInner } from './EntityResourceGroupsInner';
import {
    EntityResourceGroupsInnerFromJSON,
    EntityResourceGroupsInnerFromJSONTyped,
    EntityResourceGroupsInnerToJSON,
    EntityResourceGroupsInnerToJSONTyped,
} from './EntityResourceGroupsInner';

/**
 * 
 * @export
 * @interface Entity
 */
export interface Entity {
    /**
     * 
     * @type {number}
     * @memberof Entity
     */
    id: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof Entity
     */
    types: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof Entity
     */
    categoryId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Entity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Entity
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Entity
     */
    slug: string;
    /**
     * 
     * @type {Array<EntityResourceGroupsInner>}
     * @memberof Entity
     */
    resourceGroups?: Array<EntityResourceGroupsInner> | null;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Entity
     */
    extraDataFields?: { [key: string]: string; };
    /**
     * 
     * @type {Array<EntityResourceGroupsInner>}
     * @memberof Entity
     */
    allocationTypes?: Array<EntityResourceGroupsInner> | null;
    /**
     * 
     * @type {Array<object>}
     * @memberof Entity
     */
    fields?: Array<object> | null;
    /**
     * 
     * @type {Date}
     * @memberof Entity
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Entity
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the Entity interface.
 */
export function instanceOfEntity(value: object): value is Entity {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('types' in value) || value['types'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function EntityFromJSON(json: any): Entity {
    return EntityFromJSONTyped(json, false);
}

export function EntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): Entity {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'types': json['types'],
        'categoryId': json['category_id'] == null ? undefined : json['category_id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'slug': json['slug'],
        'resourceGroups': json['resource_groups'] == null ? undefined : ((json['resource_groups'] as Array<any>).map(EntityResourceGroupsInnerFromJSON)),
        'extraDataFields': json['extra_data_fields'] == null ? undefined : json['extra_data_fields'],
        'allocationTypes': json['allocation_types'] == null ? undefined : ((json['allocation_types'] as Array<any>).map(EntityResourceGroupsInnerFromJSON)),
        'fields': json['fields'] == null ? undefined : json['fields'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function EntityToJSON(json: any): Entity {
    return EntityToJSONTyped(json, false);
}

export function EntityToJSONTyped(value?: Entity | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'types': value['types'],
        'category_id': value['categoryId'],
        'name': value['name'],
        'description': value['description'],
        'slug': value['slug'],
        'resource_groups': value['resourceGroups'] == null ? undefined : ((value['resourceGroups'] as Array<any>).map(EntityResourceGroupsInnerToJSON)),
        'extra_data_fields': value['extraDataFields'],
        'allocation_types': value['allocationTypes'] == null ? undefined : ((value['allocationTypes'] as Array<any>).map(EntityResourceGroupsInnerToJSON)),
        'fields': value['fields'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

