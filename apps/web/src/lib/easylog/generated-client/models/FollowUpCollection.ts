/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { CategoryCollectionLinks } from './CategoryCollectionLinks';
import {
  CategoryCollectionLinksFromJSON,
  CategoryCollectionLinksFromJSONTyped,
  CategoryCollectionLinksToJSON,
  CategoryCollectionLinksToJSONTyped
} from './CategoryCollectionLinks';
import type { CategoryCollectionMeta } from './CategoryCollectionMeta';
import {
  CategoryCollectionMetaFromJSON,
  CategoryCollectionMetaFromJSONTyped,
  CategoryCollectionMetaToJSON,
  CategoryCollectionMetaToJSONTyped
} from './CategoryCollectionMeta';
import type { FollowUp } from './FollowUp';
import {
  FollowUpFromJSON,
  FollowUpFromJSONTyped,
  FollowUpToJSON,
  FollowUpToJSONTyped
} from './FollowUp';

/**
 * Paginated collection of follow-ups
 *
 * @export
 * @interface FollowUpCollection
 */
export interface FollowUpCollection {
  /**
   * @memberof FollowUpCollection
   * @type {FollowUp[]}
   */
  data?: Array<FollowUp>;
  /**
   * @memberof FollowUpCollection
   * @type {CategoryCollectionLinks}
   */
  links?: CategoryCollectionLinks;
  /**
   * @memberof FollowUpCollection
   * @type {CategoryCollectionMeta}
   */
  meta?: CategoryCollectionMeta;
}

/** Check if a given object implements the FollowUpCollection interface. */
export function instanceOfFollowUpCollection(
  value: object
): value is FollowUpCollection {
  return true;
}

export function FollowUpCollectionFromJSON(json: any): FollowUpCollection {
  return FollowUpCollectionFromJSONTyped(json, false);
}

export function FollowUpCollectionFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): FollowUpCollection {
  if (json == null) {
    return json;
  }
  return {
    data:
      json['data'] == null
        ? undefined
        : (json['data'] as Array<any>).map(FollowUpFromJSON),
    links:
      json['links'] == null
        ? undefined
        : CategoryCollectionLinksFromJSON(json['links']),
    meta:
      json['meta'] == null
        ? undefined
        : CategoryCollectionMetaFromJSON(json['meta'])
  };
}

export function FollowUpCollectionToJSON(json: any): FollowUpCollection {
  return FollowUpCollectionToJSONTyped(json, false);
}

export function FollowUpCollectionToJSONTyped(
  value?: FollowUpCollection | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    data:
      value['data'] == null
        ? undefined
        : (value['data'] as Array<any>).map(FollowUpToJSON),
    links: CategoryCollectionLinksToJSON(value['links']),
    meta: CategoryCollectionMetaToJSON(value['meta'])
  };
}
