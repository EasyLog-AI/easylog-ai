/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityAllocationBulkPayloadResourcesInner } from './EntityAllocationBulkPayloadResourcesInner';
import {
  EntityAllocationBulkPayloadResourcesInnerFromJSON,
  EntityAllocationBulkPayloadResourcesInnerFromJSONTyped,
  EntityAllocationBulkPayloadResourcesInnerToJSON,
  EntityAllocationBulkPayloadResourcesInnerToJSONTyped
} from './EntityAllocationBulkPayloadResourcesInner';

/**
 * @export
 * @interface EntityAllocationBulkPayload
 */
export interface EntityAllocationBulkPayload {
  /**
   * @memberof EntityAllocationBulkPayload
   * @type {number}
   */
  projectId: number;
  /**
   * @memberof EntityAllocationBulkPayload
   * @type {string}
   */
  group?: string | null;
  /**
   * @memberof EntityAllocationBulkPayload
   * @type {EntityAllocationBulkPayloadResourcesInner[]}
   */
  resources: Array<EntityAllocationBulkPayloadResourcesInner>;
}

/** Check if a given object implements the EntityAllocationBulkPayload interface. */
export function instanceOfEntityAllocationBulkPayload(
  value: object
): value is EntityAllocationBulkPayload {
  if (!('projectId' in value) || value['projectId'] === undefined) return false;
  if (!('resources' in value) || value['resources'] === undefined) return false;
  return true;
}

export function EntityAllocationBulkPayloadFromJSON(
  json: any
): EntityAllocationBulkPayload {
  return EntityAllocationBulkPayloadFromJSONTyped(json, false);
}

export function EntityAllocationBulkPayloadFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityAllocationBulkPayload {
  if (json == null) {
    return json;
  }
  return {
    projectId: json['project_id'],
    group: json['group'] == null ? undefined : json['group'],
    resources: (json['resources'] as Array<any>).map(
      EntityAllocationBulkPayloadResourcesInnerFromJSON
    )
  };
}

export function EntityAllocationBulkPayloadToJSON(
  json: any
): EntityAllocationBulkPayload {
  return EntityAllocationBulkPayloadToJSONTyped(json, false);
}

export function EntityAllocationBulkPayloadToJSONTyped(
  value?: EntityAllocationBulkPayload | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    project_id: value['projectId'],
    group: value['group'],
    resources: (value['resources'] as Array<any>).map(
      EntityAllocationBulkPayloadResourcesInnerToJSON
    )
  };
}
