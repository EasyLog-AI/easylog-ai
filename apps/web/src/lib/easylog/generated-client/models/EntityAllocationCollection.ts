/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EntityAllocation } from './EntityAllocation';
import {
    EntityAllocationFromJSON,
    EntityAllocationFromJSONTyped,
    EntityAllocationToJSON,
    EntityAllocationToJSONTyped,
} from './EntityAllocation';

/**
 * 
 * @export
 * @interface EntityAllocationCollection
 */
export interface EntityAllocationCollection {
    /**
     * 
     * @type {Array<EntityAllocation>}
     * @memberof EntityAllocationCollection
     */
    data: Array<EntityAllocation>;
}

/**
 * Check if a given object implements the EntityAllocationCollection interface.
 */
export function instanceOfEntityAllocationCollection(value: object): value is EntityAllocationCollection {
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function EntityAllocationCollectionFromJSON(json: any): EntityAllocationCollection {
    return EntityAllocationCollectionFromJSONTyped(json, false);
}

export function EntityAllocationCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntityAllocationCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'data': ((json['data'] as Array<any>).map(EntityAllocationFromJSON)),
    };
}

export function EntityAllocationCollectionToJSON(json: any): EntityAllocationCollection {
    return EntityAllocationCollectionToJSONTyped(json, false);
}

export function EntityAllocationCollectionToJSONTyped(value?: EntityAllocationCollection | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'data': ((value['data'] as Array<any>).map(EntityAllocationToJSON)),
    };
}

