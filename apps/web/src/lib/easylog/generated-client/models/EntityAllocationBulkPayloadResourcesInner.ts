/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface EntityAllocationBulkPayloadResourcesInner
 */
export interface EntityAllocationBulkPayloadResourcesInner {
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {number}
   */
  resourceId: number;
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {string}
   */
  type?: string | null;
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {string}
   */
  comment?: string | null;
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {Date}
   */
  start: Date;
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {Date}
   */
  end: Date;
  /**
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {number}
   */
  parentId?: number | null;
  /**
   * Additional allocation fields as key-value pairs. Values can be strings,
   * numbers, booleans, objects, or arrays. Allowed fields depend on the
   * resource configuration.
   *
   * @memberof EntityAllocationBulkPayloadResourcesInner
   * @type {object}
   */
  fields?: object | null;
}

/**
 * Check if a given object implements the
 * EntityAllocationBulkPayloadResourcesInner interface.
 */
export function instanceOfEntityAllocationBulkPayloadResourcesInner(
  value: object
): value is EntityAllocationBulkPayloadResourcesInner {
  if (!('resourceId' in value) || value['resourceId'] === undefined)
    return false;
  if (!('start' in value) || value['start'] === undefined) return false;
  if (!('end' in value) || value['end'] === undefined) return false;
  return true;
}

export function EntityAllocationBulkPayloadResourcesInnerFromJSON(
  json: any
): EntityAllocationBulkPayloadResourcesInner {
  return EntityAllocationBulkPayloadResourcesInnerFromJSONTyped(json, false);
}

export function EntityAllocationBulkPayloadResourcesInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityAllocationBulkPayloadResourcesInner {
  if (json == null) {
    return json;
  }
  return {
    resourceId: json['resource_id'],
    type: json['type'] == null ? undefined : json['type'],
    comment: json['comment'] == null ? undefined : json['comment'],
    start: new Date(json['start']),
    end: new Date(json['end']),
    parentId: json['parent_id'] == null ? undefined : json['parent_id'],
    fields: json['fields'] == null ? undefined : json['fields']
  };
}

export function EntityAllocationBulkPayloadResourcesInnerToJSON(
  json: any
): EntityAllocationBulkPayloadResourcesInner {
  return EntityAllocationBulkPayloadResourcesInnerToJSONTyped(json, false);
}

export function EntityAllocationBulkPayloadResourcesInnerToJSONTyped(
  value?: EntityAllocationBulkPayloadResourcesInner | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    resource_id: value['resourceId'],
    type: value['type'],
    comment: value['comment'],
    start: value['start'].toISOString(),
    end: value['end'].toISOString(),
    parent_id: value['parentId'],
    fields: value['fields']
  };
}
