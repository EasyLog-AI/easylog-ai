/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface UpdateFollowUpInput
 */
export interface UpdateFollowUpInput {
  /**
   * @memberof UpdateFollowUpInput
   * @type {string}
   */
  name?: string | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {string}
   */
  slug?: string | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {string}
   */
  description?: string | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {number}
   */
  followUpCategoryId?: number | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {string}
   */
  icon?: string | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {object}
   */
  scheme?: object | null;
  /**
   * @memberof UpdateFollowUpInput
   * @type {boolean}
   */
  canUseJsonTable?: boolean | null;
}

/** Check if a given object implements the UpdateFollowUpInput interface. */
export function instanceOfUpdateFollowUpInput(
  value: object
): value is UpdateFollowUpInput {
  return true;
}

export function UpdateFollowUpInputFromJSON(json: any): UpdateFollowUpInput {
  return UpdateFollowUpInputFromJSONTyped(json, false);
}

export function UpdateFollowUpInputFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): UpdateFollowUpInput {
  if (json == null) {
    return json;
  }
  return {
    name: json['name'] == null ? undefined : json['name'],
    slug: json['slug'] == null ? undefined : json['slug'],
    description: json['description'] == null ? undefined : json['description'],
    followUpCategoryId:
      json['follow_up_category_id'] == null
        ? undefined
        : json['follow_up_category_id'],
    icon: json['icon'] == null ? undefined : json['icon'],
    scheme: json['scheme'] == null ? undefined : json['scheme'],
    canUseJsonTable:
      json['can_use_json_table'] == null
        ? undefined
        : json['can_use_json_table']
  };
}

export function UpdateFollowUpInputToJSON(json: any): UpdateFollowUpInput {
  return UpdateFollowUpInputToJSONTyped(json, false);
}

export function UpdateFollowUpInputToJSONTyped(
  value?: UpdateFollowUpInput | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    name: value['name'],
    slug: value['slug'],
    description: value['description'],
    follow_up_category_id: value['followUpCategoryId'],
    icon: value['icon'],
    scheme: value['scheme'],
    can_use_json_table: value['canUseJsonTable']
  };
}
