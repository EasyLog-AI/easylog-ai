/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AllocationType
 */
export interface AllocationType {
    /**
     * 
     * @type {number}
     * @memberof AllocationType
     */
    id?: number | null;
    /**
     * 
     * @type {string}
     * @memberof AllocationType
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AllocationType
     */
    label: string;
    /**
     * 
     * @type {string}
     * @memberof AllocationType
     */
    slug: string;
    /**
     * 
     * @type {Date}
     * @memberof AllocationType
     */
    start?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof AllocationType
     */
    end?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof AllocationType
     */
    isStaged?: boolean | null;
}

/**
 * Check if a given object implements the AllocationType interface.
 */
export function instanceOfAllocationType(value: object): value is AllocationType {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('slug' in value) || value['slug'] === undefined) return false;
    return true;
}

export function AllocationTypeFromJSON(json: any): AllocationType {
    return AllocationTypeFromJSONTyped(json, false);
}

export function AllocationTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllocationType {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'label': json['label'],
        'slug': json['slug'],
        'start': json['start'] == null ? undefined : (new Date(json['start'])),
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
        'isStaged': json['is_staged'] == null ? undefined : json['is_staged'],
    };
}

export function AllocationTypeToJSON(json: any): AllocationType {
    return AllocationTypeToJSONTyped(json, false);
}

export function AllocationTypeToJSONTyped(value?: AllocationType | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'label': value['label'],
        'slug': value['slug'],
        'start': value['start'] == null ? value['start'] : value['start'].toISOString(),
        'end': value['end'] == null ? value['end'] : value['end'].toISOString(),
        'is_staged': value['isStaged'],
    };
}

