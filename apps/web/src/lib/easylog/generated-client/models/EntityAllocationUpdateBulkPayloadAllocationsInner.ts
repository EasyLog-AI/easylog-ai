/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface EntityAllocationUpdateBulkPayloadAllocationsInner
 */
export interface EntityAllocationUpdateBulkPayloadAllocationsInner {
  /**
   * The ID of the allocation to update
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {number}
   */
  id: number;
  /**
   * Start date and time
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {Date}
   */
  start?: Date;
  /**
   * End date and time
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {Date}
   */
  end?: Date;
  /**
   * Allocation type
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {string}
   */
  type?: string | null;
  /**
   * Comment
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {string}
   */
  comment?: string | null;
  /**
   * Parent allocation ID
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {number}
   */
  parentId?: number | null;
  /**
   * Additional allocation fields as key-value pairs. Values can be strings,
   * numbers, booleans, objects, or arrays. Allowed fields depend on the
   * resource configuration.
   *
   * @memberof EntityAllocationUpdateBulkPayloadAllocationsInner
   * @type {object}
   */
  fields?: object | null;
}

/**
 * Check if a given object implements the
 * EntityAllocationUpdateBulkPayloadAllocationsInner interface.
 */
export function instanceOfEntityAllocationUpdateBulkPayloadAllocationsInner(
  value: object
): value is EntityAllocationUpdateBulkPayloadAllocationsInner {
  if (!('id' in value) || value['id'] === undefined) return false;
  return true;
}

export function EntityAllocationUpdateBulkPayloadAllocationsInnerFromJSON(
  json: any
): EntityAllocationUpdateBulkPayloadAllocationsInner {
  return EntityAllocationUpdateBulkPayloadAllocationsInnerFromJSONTyped(
    json,
    false
  );
}

export function EntityAllocationUpdateBulkPayloadAllocationsInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): EntityAllocationUpdateBulkPayloadAllocationsInner {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'],
    start: json['start'] == null ? undefined : new Date(json['start']),
    end: json['end'] == null ? undefined : new Date(json['end']),
    type: json['type'] == null ? undefined : json['type'],
    comment: json['comment'] == null ? undefined : json['comment'],
    parentId: json['parent_id'] == null ? undefined : json['parent_id'],
    fields: json['fields'] == null ? undefined : json['fields']
  };
}

export function EntityAllocationUpdateBulkPayloadAllocationsInnerToJSON(
  json: any
): EntityAllocationUpdateBulkPayloadAllocationsInner {
  return EntityAllocationUpdateBulkPayloadAllocationsInnerToJSONTyped(
    json,
    false
  );
}

export function EntityAllocationUpdateBulkPayloadAllocationsInnerToJSONTyped(
  value?: EntityAllocationUpdateBulkPayloadAllocationsInner | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    start:
      value['start'] == null ? value['start'] : value['start'].toISOString(),
    end: value['end'] == null ? value['end'] : value['end'].toISOString(),
    type: value['type'],
    comment: value['comment'],
    parent_id: value['parentId'],
    fields: value['fields']
  };
}
