/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface PrepareSubmission200ResponseFilesInner
 */
export interface PrepareSubmission200ResponseFilesInner {
  /**
   * File token to use in persist request
   *
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {string}
   */
  token?: string;
  /**
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {string}
   */
  originalName?: string;
  /**
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {string}
   */
  method?: string;
  /**
   * Pre-signed S3 URL
   *
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {string}
   */
  uri?: string;
  /**
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {Date}
   */
  uploadableTill?: Date;
  /**
   * @memberof PrepareSubmission200ResponseFilesInner
   * @type {Date}
   */
  postableTill?: Date;
}

/**
 * Check if a given object implements the PrepareSubmission200ResponseFilesInner
 * interface.
 */
export function instanceOfPrepareSubmission200ResponseFilesInner(
  value: object
): value is PrepareSubmission200ResponseFilesInner {
  return true;
}

export function PrepareSubmission200ResponseFilesInnerFromJSON(
  json: any
): PrepareSubmission200ResponseFilesInner {
  return PrepareSubmission200ResponseFilesInnerFromJSONTyped(json, false);
}

export function PrepareSubmission200ResponseFilesInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): PrepareSubmission200ResponseFilesInner {
  if (json == null) {
    return json;
  }
  return {
    token: json['token'] == null ? undefined : json['token'],
    originalName:
      json['original_name'] == null ? undefined : json['original_name'],
    method: json['method'] == null ? undefined : json['method'],
    uri: json['uri'] == null ? undefined : json['uri'],
    uploadableTill:
      json['uploadable_till'] == null
        ? undefined
        : new Date(json['uploadable_till']),
    postableTill:
      json['postable_till'] == null
        ? undefined
        : new Date(json['postable_till'])
  };
}

export function PrepareSubmission200ResponseFilesInnerToJSON(
  json: any
): PrepareSubmission200ResponseFilesInner {
  return PrepareSubmission200ResponseFilesInnerToJSONTyped(json, false);
}

export function PrepareSubmission200ResponseFilesInnerToJSONTyped(
  value?: PrepareSubmission200ResponseFilesInner | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    token: value['token'],
    original_name: value['originalName'],
    method: value['method'],
    uri: value['uri'],
    uploadable_till:
      value['uploadableTill'] == null
        ? value['uploadableTill']
        : value['uploadableTill'].toISOString(),
    postable_till:
      value['postableTill'] == null
        ? value['postableTill']
        : value['postableTill'].toISOString()
  };
}
