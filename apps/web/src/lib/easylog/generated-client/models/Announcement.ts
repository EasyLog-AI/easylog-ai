/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnnouncementSender } from './AnnouncementSender';
import {
    AnnouncementSenderFromJSON,
    AnnouncementSenderFromJSONTyped,
    AnnouncementSenderToJSON,
    AnnouncementSenderToJSONTyped,
} from './AnnouncementSender';
import type { AnnouncementStatus } from './AnnouncementStatus';
import {
    AnnouncementStatusFromJSON,
    AnnouncementStatusFromJSONTyped,
    AnnouncementStatusToJSON,
    AnnouncementStatusToJSONTyped,
} from './AnnouncementStatus';
import type { MediaResource } from './MediaResource';
import {
    MediaResourceFromJSON,
    MediaResourceFromJSONTyped,
    MediaResourceToJSON,
    MediaResourceToJSONTyped,
} from './MediaResource';
import type { AnnouncementCategory } from './AnnouncementCategory';
import {
    AnnouncementCategoryFromJSON,
    AnnouncementCategoryFromJSONTyped,
    AnnouncementCategoryToJSON,
    AnnouncementCategoryToJSONTyped,
} from './AnnouncementCategory';

/**
 * 
 * @export
 * @interface Announcement
 */
export interface Announcement {
    /**
     * 
     * @type {number}
     * @memberof Announcement
     */
    id?: number;
    /**
     * 
     * @type {AnnouncementCategory}
     * @memberof Announcement
     */
    category?: AnnouncementCategory | null;
    /**
     * 
     * @type {string}
     * @memberof Announcement
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof Announcement
     */
    content?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Announcement
     */
    readReceipt?: boolean;
    /**
     * 
     * @type {AnnouncementSender}
     * @memberof Announcement
     */
    sender?: AnnouncementSender;
    /**
     * 
     * @type {Array<MediaResource>}
     * @memberof Announcement
     */
    attachments?: Array<MediaResource> | null;
    /**
     * 
     * @type {Array<AnnouncementStatus>}
     * @memberof Announcement
     */
    statuses?: Array<AnnouncementStatus> | null;
    /**
     * 
     * @type {Date}
     * @memberof Announcement
     */
    createdAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Announcement
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the Announcement interface.
 */
export function instanceOfAnnouncement(value: object): value is Announcement {
    return true;
}

export function AnnouncementFromJSON(json: any): Announcement {
    return AnnouncementFromJSONTyped(json, false);
}

export function AnnouncementFromJSONTyped(json: any, ignoreDiscriminator: boolean): Announcement {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'category': json['category'] == null ? undefined : AnnouncementCategoryFromJSON(json['category']),
        'title': json['title'] == null ? undefined : json['title'],
        'content': json['content'] == null ? undefined : json['content'],
        'readReceipt': json['read_receipt'] == null ? undefined : json['read_receipt'],
        'sender': json['sender'] == null ? undefined : AnnouncementSenderFromJSON(json['sender']),
        'attachments': json['attachments'] == null ? undefined : ((json['attachments'] as Array<any>).map(MediaResourceFromJSON)),
        'statuses': json['statuses'] == null ? undefined : ((json['statuses'] as Array<any>).map(AnnouncementStatusFromJSON)),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function AnnouncementToJSON(json: any): Announcement {
    return AnnouncementToJSONTyped(json, false);
}

export function AnnouncementToJSONTyped(value?: Announcement | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'category': AnnouncementCategoryToJSON(value['category']),
        'title': value['title'],
        'content': value['content'],
        'read_receipt': value['readReceipt'],
        'sender': AnnouncementSenderToJSON(value['sender']),
        'attachments': value['attachments'] == null ? undefined : ((value['attachments'] as Array<any>).map(MediaResourceToJSON)),
        'statuses': value['statuses'] == null ? undefined : ((value['statuses'] as Array<any>).map(AnnouncementStatusToJSON)),
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

