/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface ProjectForm
 */
export interface ProjectForm {
  /**
   * @memberof ProjectForm
   * @type {number}
   */
  id?: number;
  /**
   * @memberof ProjectForm
   * @type {number}
   */
  projectId?: number;
  /**
   * @memberof ProjectForm
   * @type {number}
   */
  formId?: number;
  /**
   * @memberof ProjectForm
   * @type {number}
   */
  categoryId?: number;
  /**
   * @memberof ProjectForm
   * @type {Date}
   */
  fromDate?: Date | null;
  /**
   * @memberof ProjectForm
   * @type {Date}
   */
  toDate?: Date | null;
  /**
   * @memberof ProjectForm
   * @type {boolean}
   */
  emailToSubmitter?: boolean;
  /**
   * @memberof ProjectForm
   * @type {string}
   */
  emailPrimary?: string;
  /**
   * @memberof ProjectForm
   * @type {string}
   */
  emailSecondary?: string;
  /**
   * @memberof ProjectForm
   * @type {string}
   */
  rrule?: string | null;
  /**
   * @memberof ProjectForm
   * @type {number}
   */
  order?: number;
  /**
   * @memberof ProjectForm
   * @type {boolean}
   */
  resetAtMidnight?: boolean;
  /**
   * @memberof ProjectForm
   * @type {boolean}
   */
  showOldSubmission?: boolean;
  /**
   * @memberof ProjectForm
   * @type {boolean}
   */
  resetStatusAtMidnight?: boolean;
}

/** Check if a given object implements the ProjectForm interface. */
export function instanceOfProjectForm(value: object): value is ProjectForm {
  return true;
}

export function ProjectFormFromJSON(json: any): ProjectForm {
  return ProjectFormFromJSONTyped(json, false);
}

export function ProjectFormFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ProjectForm {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    projectId: json['project_id'] == null ? undefined : json['project_id'],
    formId: json['form_id'] == null ? undefined : json['form_id'],
    categoryId: json['category_id'] == null ? undefined : json['category_id'],
    fromDate:
      json['from_date'] == null ? undefined : new Date(json['from_date']),
    toDate: json['to_date'] == null ? undefined : new Date(json['to_date']),
    emailToSubmitter:
      json['email_to_submitter'] == null
        ? undefined
        : json['email_to_submitter'],
    emailPrimary:
      json['email_primary'] == null ? undefined : json['email_primary'],
    emailSecondary:
      json['email_secondary'] == null ? undefined : json['email_secondary'],
    rrule: json['rrule'] == null ? undefined : json['rrule'],
    order: json['order'] == null ? undefined : json['order'],
    resetAtMidnight:
      json['reset_at_midnight'] == null ? undefined : json['reset_at_midnight'],
    showOldSubmission:
      json['show_old_submission'] == null
        ? undefined
        : json['show_old_submission'],
    resetStatusAtMidnight:
      json['reset_status_at_midnight'] == null
        ? undefined
        : json['reset_status_at_midnight']
  };
}

export function ProjectFormToJSON(json: any): ProjectForm {
  return ProjectFormToJSONTyped(json, false);
}

export function ProjectFormToJSONTyped(
  value?: ProjectForm | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    project_id: value['projectId'],
    form_id: value['formId'],
    category_id: value['categoryId'],
    from_date:
      value['fromDate'] == null
        ? undefined
        : (value['fromDate'] as any).toISOString(),
    to_date:
      value['toDate'] == null
        ? undefined
        : (value['toDate'] as any).toISOString(),
    email_to_submitter: value['emailToSubmitter'],
    email_primary: value['emailPrimary'],
    email_secondary: value['emailSecondary'],
    rrule: value['rrule'],
    order: value['order'],
    reset_at_midnight: value['resetAtMidnight'],
    show_old_submission: value['showOldSubmission'],
    reset_status_at_midnight: value['resetStatusAtMidnight']
  };
}
