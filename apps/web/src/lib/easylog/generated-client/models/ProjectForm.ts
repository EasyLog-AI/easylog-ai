/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectForm
 */
export interface ProjectForm {
    /**
     * 
     * @type {number}
     * @memberof ProjectForm
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectForm
     */
    projectId?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectForm
     */
    formId?: number;
    /**
     * 
     * @type {number}
     * @memberof ProjectForm
     */
    categoryId?: number;
    /**
     * 
     * @type {Date}
     * @memberof ProjectForm
     */
    fromDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ProjectForm
     */
    toDate?: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectForm
     */
    emailToSubmitter?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ProjectForm
     */
    emailPrimary?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectForm
     */
    emailSecondary?: string;
    /**
     * 
     * @type {string}
     * @memberof ProjectForm
     */
    rrule?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ProjectForm
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectForm
     */
    resetAtMidnight?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectForm
     */
    showOldSubmission?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ProjectForm
     */
    resetStatusAtMidnight?: boolean;
}

/**
 * Check if a given object implements the ProjectForm interface.
 */
export function instanceOfProjectForm(value: object): value is ProjectForm {
    return true;
}

export function ProjectFormFromJSON(json: any): ProjectForm {
    return ProjectFormFromJSONTyped(json, false);
}

export function ProjectFormFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectForm {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'projectId': json['project_id'] == null ? undefined : json['project_id'],
        'formId': json['form_id'] == null ? undefined : json['form_id'],
        'categoryId': json['category_id'] == null ? undefined : json['category_id'],
        'fromDate': json['from_date'] == null ? undefined : (new Date(json['from_date'])),
        'toDate': json['to_date'] == null ? undefined : (new Date(json['to_date'])),
        'emailToSubmitter': json['email_to_submitter'] == null ? undefined : json['email_to_submitter'],
        'emailPrimary': json['email_primary'] == null ? undefined : json['email_primary'],
        'emailSecondary': json['email_secondary'] == null ? undefined : json['email_secondary'],
        'rrule': json['rrule'] == null ? undefined : json['rrule'],
        'order': json['order'] == null ? undefined : json['order'],
        'resetAtMidnight': json['reset_at_midnight'] == null ? undefined : json['reset_at_midnight'],
        'showOldSubmission': json['show_old_submission'] == null ? undefined : json['show_old_submission'],
        'resetStatusAtMidnight': json['reset_status_at_midnight'] == null ? undefined : json['reset_status_at_midnight'],
    };
}

export function ProjectFormToJSON(json: any): ProjectForm {
    return ProjectFormToJSONTyped(json, false);
}

export function ProjectFormToJSONTyped(value?: ProjectForm | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'project_id': value['projectId'],
        'form_id': value['formId'],
        'category_id': value['categoryId'],
        'from_date': value['fromDate'] == null ? value['fromDate'] : value['fromDate'].toISOString(),
        'to_date': value['toDate'] == null ? value['toDate'] : value['toDate'].toISOString(),
        'email_to_submitter': value['emailToSubmitter'],
        'email_primary': value['emailPrimary'],
        'email_secondary': value['emailSecondary'],
        'rrule': value['rrule'],
        'order': value['order'],
        'reset_at_midnight': value['resetAtMidnight'],
        'show_old_submission': value['showOldSubmission'],
        'reset_status_at_midnight': value['resetStatusAtMidnight'],
    };
}

