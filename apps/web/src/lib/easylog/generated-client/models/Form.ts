/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * (https://openapi-generator.tech). https://openapi-generator.tech Do not edit
 * the class manually.
 */

import { mapValues } from '../runtime';
/**
 * @export
 * @interface Form
 */
export interface Form {
  /**
   * @memberof Form
   * @type {number}
   */
  id?: number;
  /**
   * @memberof Form
   * @type {string}
   */
  name?: string;
  /**
   * @memberof Form
   * @type {string}
   */
  description?: string | null;
  /**
   * @memberof Form
   * @type {string}
   */
  avatar?: string | null;
  /**
   * @memberof Form
   * @type {number}
   */
  clientId?: number;
  /**
   * @memberof Form
   * @type {boolean}
   */
  hasActions?: boolean;
  /**
   * @memberof Form
   * @type {Date}
   */
  createdAt?: Date | null;
  /**
   * @memberof Form
   * @type {Date}
   */
  updatedAt?: Date | null;
  /**
   * @memberof Form
   * @type {Date}
   */
  accessedAt?: Date | null;
}

/** Check if a given object implements the Form interface. */
export function instanceOfForm(value: object): value is Form {
  return true;
}

export function FormFromJSON(json: any): Form {
  return FormFromJSONTyped(json, false);
}

export function FormFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Form {
  if (json == null) {
    return json;
  }
  return {
    id: json['id'] == null ? undefined : json['id'],
    name: json['name'] == null ? undefined : json['name'],
    description: json['description'] == null ? undefined : json['description'],
    avatar: json['avatar'] == null ? undefined : json['avatar'],
    clientId: json['client_id'] == null ? undefined : json['client_id'],
    hasActions: json['has_actions'] == null ? undefined : json['has_actions'],
    createdAt:
      json['created_at'] == null ? undefined : new Date(json['created_at']),
    updatedAt:
      json['updated_at'] == null ? undefined : new Date(json['updated_at']),
    accessedAt:
      json['accessed_at'] == null ? undefined : new Date(json['accessed_at'])
  };
}

export function FormToJSON(json: any): Form {
  return FormToJSONTyped(json, false);
}

export function FormToJSONTyped(
  value?: Form | null,
  ignoreDiscriminator: boolean = false
): any {
  if (value == null) {
    return value;
  }

  return {
    id: value['id'],
    name: value['name'],
    description: value['description'],
    avatar: value['avatar'],
    client_id: value['clientId'],
    has_actions: value['hasActions'],
    created_at:
      value['createdAt'] == null
        ? value['createdAt']
        : value['createdAt'].toISOString(),
    updated_at:
      value['updatedAt'] == null
        ? value['updatedAt']
        : value['updatedAt'].toISOString(),
    accessed_at:
      value['accessedAt'] == null
        ? value['accessedAt']
        : value['accessedAt'].toISOString()
  };
}
