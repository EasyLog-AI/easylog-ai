/* tslint:disable */
/* eslint-disable */
/**
 * EasyLog API
 * Programmatic access to EasyLog REST endpoints
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  EntityAllocation,
  EntityAllocationBulkPayload,
  EntityAllocationCollection,
  EntityAllocationPayload,
} from '../models/index';
import {
    EntityAllocationFromJSON,
    EntityAllocationToJSON,
    EntityAllocationBulkPayloadFromJSON,
    EntityAllocationBulkPayloadToJSON,
    EntityAllocationCollectionFromJSON,
    EntityAllocationCollectionToJSON,
    EntityAllocationPayloadFromJSON,
    EntityAllocationPayloadToJSON,
} from '../models/index';

export interface 0863fb1e5c361fd6eaaf8f6ddc95d99eRequest {
    entityAllocationBulkPayload: EntityAllocationBulkPayload;
}

export interface 4057f6a7ca356a8dfedfffa3d0d92f46Request {
    entityAllocationPayload: EntityAllocationPayload;
}

export interface 48b533fbc9852c80d9329e7068cd9437Request {
    allocation: number;
}

export interface 5eb8813b275e790b00fa7c1b647ece45Request {
    entityAllocationBulkPayload: EntityAllocationBulkPayload;
}

export interface 807f23f9ac132c6dbe9f0933971ba71aRequest {
    allocation: number;
    entityAllocationPayload: EntityAllocationPayload;
}

export interface 80f35f8b217b7cd8bf36ad223d6cbdc3Request {
    allocation: number;
}

export interface C9ff5e98685c16a4f47a5a83ce1c8ff6Request {
    ids?: string;
}

/**
 * 
 */
export class AllocationsApi extends runtime.BaseAPI {

    /**
     * Create multiple allocations
     */
    async _0863fb1e5c361fd6eaaf8f6ddc95d99eRaw(requestParameters: 0863fb1e5c361fd6eaaf8f6ddc95d99eRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocationCollection>> {
        if (requestParameters['entityAllocationBulkPayload'] == null) {
            throw new runtime.RequiredError(
                'entityAllocationBulkPayload',
                'Required parameter "entityAllocationBulkPayload" was null or undefined when calling _0863fb1e5c361fd6eaaf8f6ddc95d99e().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v2/datasources/allocations/multiple`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EntityAllocationBulkPayloadToJSON(requestParameters['entityAllocationBulkPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationCollectionFromJSON(jsonValue));
    }

    /**
     * Create multiple allocations
     */
    async _0863fb1e5c361fd6eaaf8f6ddc95d99e(requestParameters: 0863fb1e5c361fd6eaaf8f6ddc95d99eRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocationCollection> {
        const response = await this._0863fb1e5c361fd6eaaf8f6ddc95d99eRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Create allocation (deprecated)
     */
    async _4057f6a7ca356a8dfedfffa3d0d92f46Raw(requestParameters: 4057f6a7ca356a8dfedfffa3d0d92f46Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocation>> {
        if (requestParameters['entityAllocationPayload'] == null) {
            throw new runtime.RequiredError(
                'entityAllocationPayload',
                'Required parameter "entityAllocationPayload" was null or undefined when calling _4057f6a7ca356a8dfedfffa3d0d92f46().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v2/datasources/allocations`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: EntityAllocationPayloadToJSON(requestParameters['entityAllocationPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationFromJSON(jsonValue));
    }

    /**
     * Create allocation (deprecated)
     */
    async _4057f6a7ca356a8dfedfffa3d0d92f46(requestParameters: 4057f6a7ca356a8dfedfffa3d0d92f46Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocation> {
        const response = await this._4057f6a7ca356a8dfedfffa3d0d92f46Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Delete allocation
     */
    async _48b533fbc9852c80d9329e7068cd9437Raw(requestParameters: 48b533fbc9852c80d9329e7068cd9437Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['allocation'] == null) {
            throw new runtime.RequiredError(
                'allocation',
                'Required parameter "allocation" was null or undefined when calling _48b533fbc9852c80d9329e7068cd9437().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v2/datasources/allocations/{allocation}`;
        urlPath = urlPath.replace(`{${"allocation"}}`, encodeURIComponent(String(requestParameters['allocation'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * Delete allocation
     */
    async _48b533fbc9852c80d9329e7068cd9437(requestParameters: 48b533fbc9852c80d9329e7068cd9437Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this._48b533fbc9852c80d9329e7068cd9437Raw(requestParameters, initOverrides);
    }

    /**
     * Update multiple allocations
     */
    async _5eb8813b275e790b00fa7c1b647ece45Raw(requestParameters: 5eb8813b275e790b00fa7c1b647ece45Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocationCollection>> {
        if (requestParameters['entityAllocationBulkPayload'] == null) {
            throw new runtime.RequiredError(
                'entityAllocationBulkPayload',
                'Required parameter "entityAllocationBulkPayload" was null or undefined when calling _5eb8813b275e790b00fa7c1b647ece45().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v2/datasources/allocations/multiple`;

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: EntityAllocationBulkPayloadToJSON(requestParameters['entityAllocationBulkPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationCollectionFromJSON(jsonValue));
    }

    /**
     * Update multiple allocations
     */
    async _5eb8813b275e790b00fa7c1b647ece45(requestParameters: 5eb8813b275e790b00fa7c1b647ece45Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocationCollection> {
        const response = await this._5eb8813b275e790b00fa7c1b647ece45Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Update allocation (deprecated)
     */
    async _807f23f9ac132c6dbe9f0933971ba71aRaw(requestParameters: 807f23f9ac132c6dbe9f0933971ba71aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocation>> {
        if (requestParameters['allocation'] == null) {
            throw new runtime.RequiredError(
                'allocation',
                'Required parameter "allocation" was null or undefined when calling _807f23f9ac132c6dbe9f0933971ba71a().'
            );
        }

        if (requestParameters['entityAllocationPayload'] == null) {
            throw new runtime.RequiredError(
                'entityAllocationPayload',
                'Required parameter "entityAllocationPayload" was null or undefined when calling _807f23f9ac132c6dbe9f0933971ba71a().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v2/datasources/allocations/{allocation}`;
        urlPath = urlPath.replace(`{${"allocation"}}`, encodeURIComponent(String(requestParameters['allocation'])));

        const response = await this.request({
            path: urlPath,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: EntityAllocationPayloadToJSON(requestParameters['entityAllocationPayload']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationFromJSON(jsonValue));
    }

    /**
     * Update allocation (deprecated)
     */
    async _807f23f9ac132c6dbe9f0933971ba71a(requestParameters: 807f23f9ac132c6dbe9f0933971ba71aRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocation> {
        const response = await this._807f23f9ac132c6dbe9f0933971ba71aRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Show allocation
     */
    async _80f35f8b217b7cd8bf36ad223d6cbdc3Raw(requestParameters: 80f35f8b217b7cd8bf36ad223d6cbdc3Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocation>> {
        if (requestParameters['allocation'] == null) {
            throw new runtime.RequiredError(
                'allocation',
                'Required parameter "allocation" was null or undefined when calling _80f35f8b217b7cd8bf36ad223d6cbdc3().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v2/datasources/allocations/{allocation}`;
        urlPath = urlPath.replace(`{${"allocation"}}`, encodeURIComponent(String(requestParameters['allocation'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationFromJSON(jsonValue));
    }

    /**
     * Show allocation
     */
    async _80f35f8b217b7cd8bf36ad223d6cbdc3(requestParameters: 80f35f8b217b7cd8bf36ad223d6cbdc3Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocation> {
        const response = await this._80f35f8b217b7cd8bf36ad223d6cbdc3Raw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Show multiple allocations
     */
    async c9ff5e98685c16a4f47a5a83ce1c8ff6Raw(requestParameters: C9ff5e98685c16a4f47a5a83ce1c8ff6Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<EntityAllocationCollection>> {
        const queryParameters: any = {};

        if (requestParameters['ids'] != null) {
            queryParameters['ids'] = requestParameters['ids'];
        }

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v2/datasources/allocations/multiple`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => EntityAllocationCollectionFromJSON(jsonValue));
    }

    /**
     * Show multiple allocations
     */
    async c9ff5e98685c16a4f47a5a83ce1c8ff6(requestParameters: C9ff5e98685c16a4f47a5a83ce1c8ff6Request = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<EntityAllocationCollection> {
        const response = await this.c9ff5e98685c16a4f47a5a83ce1c8ff6Raw(requestParameters, initOverrides);
        return await response.value();
    }

}
