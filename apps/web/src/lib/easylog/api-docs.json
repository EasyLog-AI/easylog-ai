{
    "openapi": "3.1.0",
    "info": {
        "title": "EasyLog API",
        "description": "Programmatic access to EasyLog REST endpoints",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "API JSON endpoints"
        }
    ],
    "paths": {
        "/v2/datasources/allocations/{allocation}": {
            "get": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Show allocation",
                "operationId": "showAllocation",
                "parameters": [
                    {
                        "name": "allocation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Delete allocation",
                "operationId": "deleteAllocation",
                "parameters": [
                    {
                        "name": "allocation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Allocation deleted"
                    },
                    "500": {
                        "description": "Could not delete allocation."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Update allocation (deprecated)",
                "operationId": "updateAllocation",
                "parameters": [
                    {
                        "name": "allocation",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityAllocationPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Allocation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocation"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not update allocation."
                    }
                }
            }
        },
        "/v2/datasources/allocations/multiple": {
            "get": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Show multiple allocations",
                "operationId": "showMultipleAllocations",
                "parameters": [
                    {
                        "name": "ids",
                        "in": "query",
                        "description": "Comma separated allocation identifiers",
                        "schema": {
                            "type": "string",
                            "example": "1,2,3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Allocations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocationCollection"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "IDs missing or invalid"
                    }
                }
            },
            "put": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Update multiple allocations",
                "operationId": "updateMultipleAllocations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityAllocationUpdateBulkPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Allocations updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocationCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Create multiple allocations",
                "operationId": "createMultipleAllocations",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityAllocationBulkPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Allocations created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocationCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/datasources/allocations": {
            "post": {
                "tags": [
                    "Allocations"
                ],
                "summary": "Create allocation (deprecated)",
                "operationId": "createAllocation",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntityAllocationPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Allocation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityAllocation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/announcements": {
            "get": {
                "tags": [
                    "Announcements"
                ],
                "summary": "List announcements",
                "description": "List all announcements for the authenticated user. Automatically marks unread announcements as retrieved.",
                "operationId": "listAnnouncements",
                "responses": {
                    "200": {
                        "description": "Announcements collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/announcements/{announcement}": {
            "get": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Show announcement",
                "description": "Display a specific announcement. Automatically marks the announcement as retrieved if not already marked.",
                "operationId": "showAnnouncement",
                "parameters": [
                    {
                        "name": "announcement",
                        "in": "path",
                        "description": "Announcement ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Announcement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to view this announcement"
                    },
                    "404": {
                        "description": "Announcement not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/announcements/{announcement}/status": {
            "post": {
                "tags": [
                    "Announcements"
                ],
                "summary": "Update announcement status",
                "description": "Track user interaction with an announcement by recording status updates (retrieved, opened, scrolled_down, opened_attachment, confirmed_messages_read).",
                "operationId": "updateAnnouncementStatus",
                "parameters": [
                    {
                        "name": "announcement",
                        "in": "path",
                        "description": "Announcement ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AnnouncementStatusInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Announcement with updated status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AnnouncementResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized or invalid media_id"
                    },
                    "404": {
                        "description": "Announcement not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/bulletin-items": {
            "get": {
                "tags": [
                    "Bulletin"
                ],
                "summary": "List bulletin chapters and items",
                "description": "Get all bulletin chapters with their items, organized hierarchically. Includes items not assigned to any chapter as a synthetic first chapter with id=0. Only returns chapters and items accessible to the user's groups.",
                "operationId": "listBulletinItems",
                "responses": {
                    "200": {
                        "description": "Bulletin chapters and items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BulletinChapterCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List categories (paginated)",
                "description": "Display a listing of the resource.",
                "operationId": "listCategories",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated categories collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create category",
                "description": "Store a newly created resource in storage.",
                "operationId": "createCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/categories/{category}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Show category",
                "description": "Display the specified resource.",
                "operationId": "showCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "description": "Remove the specified resource from storage.",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted"
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update the specified resource in storage.",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategoryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/categories/{category}/forms": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List forms in a category",
                "description": "List forms in a category.",
                "operationId": "listCategoryForms",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Forms",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/configuration": {
            "get": {
                "tags": [
                    "Configuration"
                ],
                "summary": "Get client configuration",
                "description": "Retrieve the authenticated user's client configuration including default time periods, planning filters, and permissions.",
                "operationId": "getClientConfiguration",
                "responses": {
                    "200": {
                        "description": "Client configuration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ClientConfigurationResource"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/datasources": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "List datasources for the authenticated client",
                "operationId": "listDatasources",
                "parameters": [
                    {
                        "name": "types[]",
                        "in": "query",
                        "description": "Filter by entity types",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Datasources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EntityCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/datasources/{entity}": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "Retrieve a single datasource",
                "operationId": "showDatasource",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "Datasource identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Datasource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "data"
                                    ],
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Entity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/datasources/{entity}/entries/{entityDatum}": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "Show datasource entry",
                "description": "Retrieve a specific entry (entity datum) from a datasource entity.",
                "operationId": "showDatasourceEntry",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "Entity (datasource) ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "entityDatum",
                        "in": "path",
                        "description": "Entity datum (entry) ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Entity datum",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Entity datum data",
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entity or entry not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/follow-ups/categories": {
            "get": {
                "tags": [
                    "Follow Up Categories"
                ],
                "summary": "List follow-up categories (paginated)",
                "description": "List all follow-up categories for the current client. Categories are filtered by user group membership unless the user has the FollowUpOverrideGroups permission. Users will only see categories that are either assigned to their groups or have no group assignment (ungrouped).",
                "operationId": "listFollowUpCategories",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated follow-up categories collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpCategoryCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/follow-ups/categories/{category}": {
            "get": {
                "tags": [
                    "Follow Up Categories"
                ],
                "summary": "Show follow-up category",
                "description": "Display the specified resource.",
                "operationId": "showFollowUpCategory",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "Follow-up category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Follow-up category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpCategoryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/follow-ups/{followUp}/entries": {
            "get": {
                "tags": [
                    "Follow Up Entries"
                ],
                "summary": "List follow-up entries (paginated)",
                "description": "Display a listing of the resource.",
                "operationId": "listFollowUpEntries",
                "parameters": [
                    {
                        "name": "followUp",
                        "in": "path",
                        "description": "Follow-up ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated follow-up entries collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpEntryCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follow-up not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Follow Up Entries"
                ],
                "summary": "Create follow-up entry",
                "description": "Store a newly created resource in storage.",
                "operationId": "createFollowUpEntry",
                "parameters": [
                    {
                        "name": "followUp",
                        "in": "path",
                        "description": "Follow-up ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FollowUpEntryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created follow-up entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpEntryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follow-up not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/entries/{entry}": {
            "get": {
                "tags": [
                    "Follow Up Entries"
                ],
                "summary": "Show follow-up entry",
                "description": "Display the specified resource.",
                "operationId": "showFollowUpEntry",
                "parameters": [
                    {
                        "name": "entry",
                        "in": "path",
                        "description": "Follow-up entry ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Follow-up entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpEntryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entry not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Follow Up Entries"
                ],
                "summary": "Delete follow-up entry",
                "description": "Remove the specified resource from storage.",
                "operationId": "deleteFollowUpEntry",
                "parameters": [
                    {
                        "name": "entry",
                        "in": "path",
                        "description": "Follow-up entry ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Follow-up entry deleted"
                    },
                    "404": {
                        "description": "Entry not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Follow Up Entries"
                ],
                "summary": "Update follow-up entry",
                "description": "Update the specified resource in storage.",
                "operationId": "updateFollowUpEntry",
                "parameters": [
                    {
                        "name": "entry",
                        "in": "path",
                        "description": "Follow-up entry ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FollowUpEntryInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated follow-up entry",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpEntryResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Entry not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/follow-ups": {
            "get": {
                "tags": [
                    "Follow Ups"
                ],
                "summary": "List follow-ups (paginated)",
                "description": "List all follow-ups for the current client. Follow-ups are filtered by user group membership unless the user has the FollowUpOverrideGroups permission. Users will only see follow-ups that are either assigned to their groups or have no group assignment (ungrouped).",
                "operationId": "listFollowUps",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated follow-ups collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Follow Ups"
                ],
                "summary": "Create follow-up",
                "description": "Store a newly created resource in storage.",
                "operationId": "createFollowUp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFollowUpInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Created follow-up",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/follow-ups/{followUp}": {
            "get": {
                "tags": [
                    "Follow Ups"
                ],
                "summary": "Show follow-up",
                "description": "Display the specified resource.",
                "operationId": "showFollowUp",
                "parameters": [
                    {
                        "name": "followUp",
                        "in": "path",
                        "description": "Follow-up ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Follow-up",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follow-up not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Follow Ups"
                ],
                "summary": "Delete follow-up",
                "description": "Remove the specified resource from storage.",
                "operationId": "deleteFollowUp",
                "parameters": [
                    {
                        "name": "followUp",
                        "in": "path",
                        "description": "Follow-up ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Follow-up deleted"
                    },
                    "404": {
                        "description": "Follow-up not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Follow Ups"
                ],
                "summary": "Update follow-up",
                "description": "Update the specified resource in storage.",
                "operationId": "updateFollowUp",
                "parameters": [
                    {
                        "name": "followUp",
                        "in": "path",
                        "description": "Follow-up ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFollowUpInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated follow-up",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FollowUpResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Follow-up not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms/{form}/categories": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "List categories for a form",
                "description": "List categories for a form.",
                "operationId": "listFormCategories",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "List forms (paginated)",
                "description": "Display a listing of the resource.\n\nReturns a paginated list of forms without the heavy content field.\nUse the show endpoint to retrieve a specific form with its full content.",
                "operationId": "listForms",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated forms collection (excludes content field)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormListCollection"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forms"
                ],
                "summary": "Create form",
                "description": "Store a newly created resource in storage.",
                "operationId": "createForm",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreFormInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms/{form}": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Show form",
                "description": "Display the specified resource.",
                "operationId": "showForm",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forms"
                ],
                "summary": "Delete form",
                "description": "Remove the specified resource from storage.",
                "operationId": "deleteForm",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Form deleted"
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Forms"
                ],
                "summary": "Update form",
                "description": "Update the specified resource in storage.",
                "operationId": "updateForm",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateFormInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated form",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms/{form}/schema": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "Get form JSON schema",
                "description": "Get form JSON schema.",
                "operationId": "getFormSchema",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form schema"
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms/{form}/versions": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "List form versions",
                "description": "List form versions.",
                "operationId": "listFormVersions",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Form versions"
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/forms/{form}/project-forms": {
            "get": {
                "tags": [
                    "Forms"
                ],
                "summary": "List project forms for this form",
                "description": "Get all ProjectForms (form-to-project associations) for a specific form. This helps map from a form ID to project form IDs which are needed for submissions.",
                "operationId": "listFormProjectForms",
                "parameters": [
                    {
                        "name": "form",
                        "in": "path",
                        "description": "Form ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project forms collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectFormCollection"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Form not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/calendar/{token}/ics": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Export resource calendar as ICS",
                "description": "Export allocations for a resource as an iCalendar (.ics) file using a secure token. Returns text/calendar format.",
                "operationId": "exportCalendarICS",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Secure calendar token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ICS calendar file",
                        "content": {
                            "text/calendar": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Calendar not found"
                    }
                }
            }
        },
        "/v2/{clientId}/pdf/{slug}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate PDF report",
                "description": "Generate and download a PDF report based on encrypted data parameters. Supports exporting single or multiple Eloquent models as PDF. Add ?as=html to view HTML instead of PDF.",
                "operationId": "generatePdfReport",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "Client ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "PDF report configuration slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "data",
                        "in": "query",
                        "description": "Encrypted report data parameters",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "as",
                        "in": "query",
                        "description": "Output format (html for preview, omit for PDF)",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "html"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file or HTML preview",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data or unknown type"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "Report configuration not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/submissions/{project_form}/persist": {
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Persist submission",
                "description": "Create and persist a new submission with form data and uploaded files. Files should be uploaded first using the prepare endpoint. Supports both POST and PUT methods for compatibility.",
                "operationId": "persistSubmission",
                "parameters": [
                    {
                        "name": "project_form",
                        "in": "path",
                        "description": "Project form ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "data",
                                    "form_version_id"
                                ],
                                "properties": {
                                    "data": {
                                        "description": "Form submission data",
                                        "type": "object",
                                        "additionalProperties": true
                                    },
                                    "form_version_id": {
                                        "description": "Form version ID",
                                        "type": "integer"
                                    },
                                    "checksum": {
                                        "description": "Optional checksum for validation",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Submission created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "submission_id": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data or file tokens"
                    },
                    "404": {
                        "description": "Project form not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error during persistence"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/submissions/{project_form}/prepare": {
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Prepare submission file uploads",
                "description": "Prepare file uploads for a submission by generating pre-signed S3 URLs. Call this before persisting the submission if files need to be uploaded.",
                "operationId": "prepareSubmission",
                "parameters": [
                    {
                        "name": "project_form",
                        "in": "path",
                        "description": "Project form ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "files"
                                ],
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "name",
                                                "mime"
                                            ],
                                            "properties": {
                                                "name": {
                                                    "description": "File name with extension",
                                                    "type": "string"
                                                },
                                                "mime": {
                                                    "description": "MIME type",
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Pre-signed upload URLs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "files": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "token": {
                                                        "description": "File token to use in persist request",
                                                        "type": "string"
                                                    },
                                                    "original_name": {
                                                        "type": "string"
                                                    },
                                                    "method": {
                                                        "type": "string",
                                                        "example": "PUT"
                                                    },
                                                    "uri": {
                                                        "description": "Pre-signed S3 URL",
                                                        "type": "string"
                                                    },
                                                    "uploadable_till": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "postable_till": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project form not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/datasources/project/{project}/phases": {
            "get": {
                "tags": [
                    "Planning phases"
                ],
                "summary": "List project phases",
                "operationId": "listProjectPhases",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Phases",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Phase"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The entity is not a project."
                    }
                }
            },
            "post": {
                "tags": [
                    "Planning phases"
                ],
                "summary": "Create project phase",
                "operationId": "createProjectPhase",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhaseCreatePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phase",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Phase"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create phase"
                    }
                }
            }
        },
        "/v2/datasources/phases/{phase}": {
            "get": {
                "tags": [
                    "Planning phases"
                ],
                "summary": "Show phase",
                "operationId": "showProjectPhase",
                "parameters": [
                    {
                        "name": "phase",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Phase",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Phase"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Planning phases"
                ],
                "summary": "Delete phase",
                "operationId": "deleteProjectPhase",
                "parameters": [
                    {
                        "name": "phase",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Phase deleted"
                    },
                    "500": {
                        "description": "Could not delete allocation type allocation."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Planning phases"
                ],
                "summary": "Update phase",
                "operationId": "updateProjectPhase",
                "parameters": [
                    {
                        "name": "phase",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PhaseUpdatePayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Phase",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Phase"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update phase"
                    }
                }
            }
        },
        "/v2/datasources/projects": {
            "get": {
                "tags": [
                    "Planning"
                ],
                "summary": "List projects",
                "operationId": "listProjects",
                "parameters": [
                    {
                        "name": "types[]",
                        "in": "query",
                        "description": "Filter projects by datasource slug",
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Return projects starting on or after this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Return projects ending on or before this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Planning"
                ],
                "summary": "Create project",
                "operationId": "createProject",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Could not store project, client id invalid."
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Could not store project."
                    }
                }
            }
        },
        "/v2/datasources/projects/{project}": {
            "get": {
                "tags": [
                    "Planning"
                ],
                "summary": "Show project",
                "operationId": "showProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "description": "Project identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter allocations starting on or after this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter allocations ending on or before this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The entity is not a project."
                    }
                }
            },
            "delete": {
                "tags": [
                    "Planning"
                ],
                "summary": "Delete project",
                "operationId": "deleteProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Project deleted"
                    },
                    "500": {
                        "description": "Could not delete project."
                    }
                }
            },
            "patch": {
                "tags": [
                    "Planning"
                ],
                "summary": "Update project",
                "operationId": "updateProject",
                "parameters": [
                    {
                        "name": "project",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not update project."
                    }
                }
            }
        },
        "/v2/datasources/resources/{resource}/projects/{slug}": {
            "get": {
                "tags": [
                    "Planning"
                ],
                "summary": "List projects for a resource group",
                "operationId": "listProjectsForResource",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Resource group slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Filter allocations starting on or after this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Filter allocations ending on or before this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Projects",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "The entity is not a resource."
                    }
                }
            }
        },
        "/v2/datasources/{entity}/project": {
            "post": {
                "tags": [
                    "Planning"
                ],
                "summary": "Create project in specific datasource",
                "operationId": "createProjectInDatasource",
                "parameters": [
                    {
                        "name": "entity",
                        "in": "path",
                        "description": "Datasource/Entity identifier (ID or slug)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectPayload"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Project",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Could not store project, client id invalid."
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Could not store project."
                    }
                }
            }
        },
        "/v2/datasources/resources": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "List resource entities",
                "operationId": "listResources",
                "responses": {
                    "200": {
                        "description": "Resources",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceCollection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v2/datasources/resources/{resource}": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "Retrieve a resource",
                "operationId": "showResource",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResourceCollection"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Resource not available"
                    }
                }
            }
        },
        "/v2/datasources/resources/{resource}/{slug}": {
            "get": {
                "tags": [
                    "Datasources"
                ],
                "summary": "Retrieve resource data by group",
                "operationId": "showResourceByGroup",
                "parameters": [
                    {
                        "name": "resource",
                        "in": "path",
                        "description": "Resource identifier",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "slug",
                        "in": "path",
                        "description": "Resource group slug",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "required": [
                                        "data"
                                    ],
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Resource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Resource not available"
                    }
                }
            }
        },
        "/v2/submissions/{submission}/media": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "List media for a submission",
                "description": "Get all media files attached to a submission.",
                "operationId": "listSubmissionMedia",
                "parameters": [
                    {
                        "name": "submission",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Media collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MediaResource"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to view this submission"
                    },
                    "404": {
                        "description": "Submission not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Upload media to a submission",
                "description": "Upload a file and attach it to a submission. Maximum file size: 10MB.",
                "operationId": "uploadSubmissionMedia",
                "parameters": [
                    {
                        "name": "submission",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "file"
                                ],
                                "properties": {
                                    "file": {
                                        "description": "File to upload (max 10MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Media uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/MediaResource"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to update this submission"
                    },
                    "404": {
                        "description": "Submission not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/submissions": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "List submissions (paginated)",
                "description": "List all submissions for the current user. Regular users only see their own submissions. Users with ViewAllSubmissions permission can see all submissions in their client and filter by issuer_id.",
                "operationId": "listSubmissions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "project_form_id",
                        "in": "query",
                        "description": "Filter by project form ID",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "issuer_id",
                        "in": "query",
                        "description": "Filter by issuer user ID (requires ViewAllSubmissions permission)",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "Filter submissions created from this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "Filter submissions created until this date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "with",
                        "in": "query",
                        "description": "Comma-separated list of relationships to eager load (projectForm, issuer, media)",
                        "schema": {
                            "type": "string",
                            "example": "projectForm,issuer,media"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page (1-100)",
                        "schema": {
                            "type": "integer",
                            "default": 25,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated submissions collection",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmissionCollection"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - insufficient permissions to filter by issuer_id"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/v2/submissions/{submission}": {
            "get": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Show submission",
                "description": "Display a specific submission. Users can only view submissions they created or if they have ViewAllSubmissions permission.",
                "operationId": "showSubmission",
                "parameters": [
                    {
                        "name": "submission",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmissionResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to view this submission"
                    },
                    "404": {
                        "description": "Submission not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Delete submission",
                "description": "Delete a submission and all associated media. Users can only delete submissions they created or if they have ViewAllSubmissions permission.",
                "operationId": "deleteSubmission",
                "parameters": [
                    {
                        "name": "submission",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Submission deleted"
                    },
                    "403": {
                        "description": "Forbidden - not authorized to delete this submission"
                    },
                    "404": {
                        "description": "Submission not found"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Submissions"
                ],
                "summary": "Update submission",
                "description": "Update submission data. Users can only update submissions they created or if they have ViewAllSubmissions permission. Only the data field can be updated.",
                "operationId": "updateSubmission",
                "parameters": [
                    {
                        "name": "submission",
                        "in": "path",
                        "description": "Submission ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSubmissionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated submission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubmissionResource"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - not authorized to update this submission"
                    },
                    "404": {
                        "description": "Submission not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "StoreCategoryInput": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "FollowUpEntryInput": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "StoreFollowUpInput": {
                "required": [
                    "name",
                    "slug",
                    "scheme"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "follow_up_category_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "scheme": {
                        "type": "object"
                    },
                    "can_use_json_table": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "StoreFormInput": {
                "required": [
                    "name",
                    "content"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "content": {
                        "description": "JSON string containing form schema",
                        "type": "string"
                    },
                    "force_schema_validity": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateCategoryInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "UpdateFollowUpInput": {
                "properties": {
                    "name": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "slug": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "follow_up_category_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "scheme": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "can_use_json_table": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateFormInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "maxLength": 255
                    },
                    "content": {
                        "description": "JSON string containing form schema",
                        "type": "string"
                    },
                    "force_schema_validity": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "UpdateSubmissionInput": {
                "properties": {
                    "data": {
                        "description": "Submission data (JSON object)",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AnnouncementStatus": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "retrieved",
                            "opened",
                            "scrolled_down",
                            "opened_attachment",
                            "confirmed_messages_read"
                        ]
                    },
                    "media_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AnnouncementCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "color": {
                        "type": [
                            "string",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "Announcement": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "category": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AnnouncementCategory"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "read_receipt": {
                        "type": "boolean"
                    },
                    "sender": {
                        "properties": {
                            "fullname": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "attachments": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/MediaResource"
                        }
                    },
                    "statuses": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AnnouncementStatus"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "AnnouncementResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Announcement"
                    }
                },
                "type": "object"
            },
            "AnnouncementCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Announcement"
                        }
                    }
                },
                "type": "object"
            },
            "BulletinChapter": {
                "properties": {
                    "id": {
                        "description": "0 for unchaptered items",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "description": "Chapter title, empty for unchaptered items",
                        "type": "string"
                    },
                    "items": {
                        "description": "Bulletin items in this chapter",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulletinItem"
                        }
                    },
                    "chapters": {
                        "description": "Nested sub-chapters",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulletinChapter"
                        }
                    }
                },
                "type": "object"
            },
            "BulletinChapterCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulletinChapter"
                        }
                    }
                },
                "type": "object"
            },
            "BulletinItem": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "type": {
                        "description": "Bulletin item type (e.g., pdf, annotated_pdf)",
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "bulletin_chapter_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "agent_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "CategoryResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Category"
                    }
                },
                "type": "object"
            },
            "CategoryCollection": {
                "description": "Paginated collection of categories",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ClientConfiguration": {
                "properties": {
                    "defaultTimePeriod": {
                        "description": "Default time period configuration",
                        "type": "object",
                        "additionalProperties": true
                    },
                    "filters": {
                        "description": "Available planning filters",
                        "type": "array",
                        "items": {
                            "properties": {
                                "field": {
                                    "type": "string"
                                },
                                "label": {
                                    "type": "string"
                                },
                                "enabled": {
                                    "type": "boolean"
                                },
                                "slugs": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "options": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            },
                            "type": "object"
                        }
                    },
                    "can": {
                        "description": "User permissions",
                        "properties": {
                            "edit-planning": {
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "planning": {
                        "description": "Planning configuration",
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "type": "object"
            },
            "ClientConfigurationResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ClientConfiguration"
                    }
                },
                "type": "object"
            },
            "Entity": {
                "required": [
                    "id",
                    "types",
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "category_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "slug": {
                        "type": "string"
                    },
                    "resource_groups": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "required": [
                                "name",
                                "label",
                                "slug"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "label": {
                                    "type": "string"
                                },
                                "slug": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "extra_data_fields": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "allocation_types": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "required": [
                                "name",
                                "label",
                                "slug"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "label": {
                                    "type": "string"
                                },
                                "slug": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "fields": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EntityCollection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Entity"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "FollowUpCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "order": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FollowUpCategoryResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/FollowUpCategory"
                    }
                },
                "type": "object"
            },
            "FollowUpCategoryCollection": {
                "description": "Paginated collection of follow-up categories",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FollowUpCategory"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "FollowUpEntry": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "follow_up_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "version_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "data": {
                        "type": "object"
                    },
                    "follow_up": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "type": "string"
                            },
                            "slug": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string",
                                "format": "email"
                            }
                        },
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FollowUpEntryResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/FollowUpEntry"
                    }
                },
                "type": "object"
            },
            "FollowUpEntryCollection": {
                "description": "Paginated collection of follow-up entries",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FollowUpEntry"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "FollowUp": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "icon": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "follow_up_category_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "scheme": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "can_use_json_table": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "entries_count": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int32"
                    }
                },
                "type": "object"
            },
            "FollowUpResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/FollowUp"
                    }
                },
                "type": "object"
            },
            "FollowUpCollection": {
                "description": "Paginated collection of follow-ups",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FollowUp"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "FormListItem": {
                "description": "Lightweight form representation for list endpoints",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "client_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "has_actions": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "accessed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FormListResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/FormListItem"
                    }
                },
                "type": "object"
            },
            "FormListCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormListItem"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Form": {
                "description": "Complete form representation including content field (use for show/create/update endpoints)",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "avatar": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "client_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "content": {
                        "description": "JSON string containing form schema, widgets, and configuration",
                        "type": "string"
                    },
                    "has_actions": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "accessed_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "FormResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Form"
                    }
                },
                "type": "object"
            },
            "FormCollection": {
                "description": "Non-paginated collection of forms with full content (used by nested endpoints like category forms)",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        }
                    }
                },
                "type": "object"
            },
            "MediaResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "file_name": {
                        "type": "string"
                    },
                    "open_label": {
                        "properties": {
                            "en": {
                                "type": "string"
                            },
                            "nl": {
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "mime_type": {
                        "type": "string"
                    },
                    "size": {
                        "description": "File size in bytes",
                        "type": "integer"
                    },
                    "path": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ProjectForm": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "project_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "form_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "category_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "from_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "to_date": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "email_to_submitter": {
                        "type": "boolean"
                    },
                    "email_primary": {
                        "type": "string"
                    },
                    "email_secondary": {
                        "type": "string"
                    },
                    "rrule": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "order": {
                        "type": "integer"
                    },
                    "reset_at_midnight": {
                        "type": "boolean"
                    },
                    "show_old_submission": {
                        "type": "boolean"
                    },
                    "reset_status_at_midnight": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "ProjectFormResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/ProjectForm"
                    }
                },
                "type": "object"
            },
            "ProjectFormCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProjectForm"
                        }
                    }
                },
                "type": "object"
            },
            "Resource": {
                "required": [
                    "id",
                    "label",
                    "name",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "label": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "data": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "ResourceCollection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "title": "ResourceCollectionData",
                        "required": [
                            "data"
                        ],
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Resource"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "Submission": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "issuer_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "client_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "project_form_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "version_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "data": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "checksum": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "SubmissionResource": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Submission"
                    }
                },
                "type": "object"
            },
            "SubmissionCollection": {
                "description": "Paginated collection of submissions",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Submission"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "last": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "prev": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            },
                            "next": {
                                "type": [
                                    "string",
                                    "null"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer"
                            },
                            "from": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "last_page": {
                                "type": "integer"
                            },
                            "per_page": {
                                "type": "integer"
                            },
                            "to": {
                                "type": [
                                    "integer",
                                    "null"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginationLink": {
                "properties": {
                    "url": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "https://example.com?page=2"
                    },
                    "label": {
                        "type": "string",
                        "example": "Next"
                    },
                    "active": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "PaginationLinks": {
                "properties": {
                    "first": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "https://example.com?page=1"
                    },
                    "last": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "https://example.com?page=10"
                    },
                    "prev": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "https://example.com?page=1"
                    },
                    "next": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "example": "https://example.com?page=3"
                    }
                },
                "type": "object"
            },
            "PaginationMeta": {
                "required": [
                    "current_page",
                    "per_page",
                    "total"
                ],
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "from": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaginationLink"
                        }
                    },
                    "path": {
                        "type": "string",
                        "example": "https://example.com/resources"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 25
                    },
                    "to": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "example": 25
                    },
                    "total": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "required": [
                    "links",
                    "meta"
                ],
                "properties": {
                    "links": {
                        "$ref": "#/components/schemas/PaginationLinks"
                    },
                    "meta": {
                        "$ref": "#/components/schemas/PaginationMeta"
                    }
                },
                "type": "object"
            },
            "AllocationType": {
                "required": [
                    "name",
                    "label",
                    "slug"
                ],
                "properties": {
                    "id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "start": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "end": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "is_staged": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "AnnouncementStatusInput": {
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "retrieved",
                            "opened",
                            "scrolled_down",
                            "opened_attachment",
                            "confirmed_messages_read"
                        ]
                    },
                    "media_id": {
                        "description": "Required when status is 'opened_attachment'",
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    }
                },
                "type": "object"
            },
            "EntityAllocationBulkPayload": {
                "required": [
                    "project_id",
                    "resources"
                ],
                "properties": {
                    "project_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "group": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "required": [
                                "resource_id",
                                "start",
                                "end"
                            ],
                            "properties": {
                                "resource_id": {
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "type": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "comment": {
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "start": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "end": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "parent_id": {
                                    "type": [
                                        "integer",
                                        "null"
                                    ],
                                    "format": "int64"
                                },
                                "fields": {
                                    "description": "Additional allocation fields as key-value pairs. Values can be strings, numbers, booleans, objects, or arrays. Allowed fields depend on the resource configuration.",
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "EntityAllocationCollection": {
                "required": [
                    "data"
                ],
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EntityAllocation"
                        }
                    }
                },
                "type": "object"
            },
            "EntityAllocationPayload": {
                "required": [
                    "project_id",
                    "resource_id",
                    "start",
                    "end"
                ],
                "properties": {
                    "project_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "resource_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "group": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fields": {
                        "description": "Additional allocation fields as key-value pairs. Values can be strings, numbers, booleans, objects, or arrays. Allowed fields depend on the resource configuration.",
                        "type": [
                            "object",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "EntityAllocation": {
                "required": [
                    "id",
                    "project_id",
                    "resource_id",
                    "start",
                    "end"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "project_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "resource_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "group": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "type": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "comment": {
                        "type": [
                            "string",
                            "null"
                        ]
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "fields": {
                        "type": [
                            "object",
                            "null"
                        ],
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "parent_id": {
                        "type": [
                            "integer",
                            "null"
                        ],
                        "format": "int64"
                    },
                    "children": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/EntityAllocation"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "EntityAllocationUpdateBulkPayload": {
                "required": [
                    "allocations"
                ],
                "properties": {
                    "allocations": {
                        "type": "array",
                        "items": {
                            "required": [
                                "id"
                            ],
                            "properties": {
                                "id": {
                                    "description": "The ID of the allocation to update",
                                    "type": "integer",
                                    "format": "int64"
                                },
                                "start": {
                                    "description": "Start date and time",
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "end": {
                                    "description": "End date and time",
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "type": {
                                    "description": "Allocation type",
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "comment": {
                                    "description": "Comment",
                                    "type": [
                                        "string",
                                        "null"
                                    ]
                                },
                                "parent_id": {
                                    "description": "Parent allocation ID",
                                    "type": [
                                        "integer",
                                        "null"
                                    ],
                                    "format": "int64"
                                },
                                "fields": {
                                    "description": "Additional allocation fields as key-value pairs. Values can be strings, numbers, booleans, objects, or arrays. Allowed fields depend on the resource configuration.",
                                    "type": [
                                        "object",
                                        "null"
                                    ]
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "PhaseCreatePayload": {
                "required": [
                    "slug",
                    "start",
                    "end"
                ],
                "properties": {
                    "slug": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_staged": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "Phase": {
                "required": [
                    "slug",
                    "start",
                    "end"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_staged": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "PhaseUpdatePayload": {
                "required": [
                    "start",
                    "end"
                ],
                "properties": {
                    "start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "is_staged": {
                        "type": [
                            "boolean",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "ProjectCollection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Pagination"
                    },
                    {
                        "required": [
                            "data"
                        ],
                        "properties": {
                            "data": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "ProjectPayload": {
                "description": "Project creation/update payload",
                "required": [
                    "name",
                    "color",
                    "report_visible",
                    "exclude_in_workdays",
                    "start",
                    "end"
                ],
                "properties": {
                    "name": {
                        "description": "Project name",
                        "type": "string"
                    },
                    "color": {
                        "description": "Project color code",
                        "type": "string"
                    },
                    "report_visible": {
                        "description": "Whether the project is visible in reports",
                        "type": "boolean"
                    },
                    "exclude_in_workdays": {
                        "description": "Whether to exclude project in workday calculations",
                        "type": "boolean"
                    },
                    "start": {
                        "description": "Project start date (not required for dateless projects)",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end": {
                        "description": "Project end date (not required for dateless projects)",
                        "type": "string",
                        "format": "date-time"
                    },
                    "extra_data": {
                        "description": "Additional fields (can contain strings, numbers, booleans, objects, arrays). Keys must exist in extra_data_fields on the project datasource",
                        "type": [
                            "object",
                            "null"
                        ]
                    }
                },
                "type": "object"
            },
            "Project": {
                "required": [
                    "id",
                    "datasource_id",
                    "label"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "datasource_id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "label": {
                        "type": "string"
                    },
                    "extra_data": {
                        "type": [
                            "object",
                            "null"
                        ]
                    },
                    "allocation_types": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "$ref": "#/components/schemas/AllocationType"
                        }
                    },
                    "allocations_grouped": {
                        "type": [
                            "array",
                            "null"
                        ],
                        "items": {
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": [
                            "string",
                            "null"
                        ],
                        "format": "date-time"
                    }
                },
                "type": "object",
                "additionalProperties": true
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "flows": {
                    "password": {
                        "tokenUrl": "http://localhost/oauth/token",
                        "refreshUrl": "http://localhost/token/refresh",
                        "scopes": {
                            "openid": "OpenID Connect scope"
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Categories",
            "description": "Manage categories for forms"
        },
        {
            "name": "Follow Up Categories",
            "description": "Manage follow-up categories"
        },
        {
            "name": "Follow Up Entries",
            "description": "Manage follow-up entries"
        },
        {
            "name": "Follow Ups",
            "description": "Manage follow-up definitions"
        },
        {
            "name": "Forms",
            "description": "Manage forms and form schemas"
        },
        {
            "name": "Submissions",
            "description": "Manage form submissions"
        },
        {
            "name": "Allocations",
            "description": "Allocations"
        },
        {
            "name": "Announcements",
            "description": "Announcements"
        },
        {
            "name": "Bulletin",
            "description": "Bulletin"
        },
        {
            "name": "Configuration",
            "description": "Configuration"
        },
        {
            "name": "Datasources",
            "description": "Datasources"
        },
        {
            "name": "Calendar",
            "description": "Calendar"
        },
        {
            "name": "Reports",
            "description": "Reports"
        },
        {
            "name": "Planning phases",
            "description": "Planning phases"
        },
        {
            "name": "Planning",
            "description": "Planning"
        }
    ]
}